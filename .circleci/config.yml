version: 2.1
orbs:
  azure-acr: circleci/azure-acr@0.1.1
  azure-aks: circleci/azure-aks@0.1.0
  kubernetes: circleci/kubernetes@0.3.0
jobs:
  build-and-test:
    working_directory: ~/pelican-bookstore
    docker:
      - image: circleci/openjdk:8-jdk-stretch-browsers
      - image: circleci/postgres:9.6.3-alpine
        environment:
          POSTGRES_USER: root
          POSTGRES_DB: circle_test
    steps:
      - checkout
      - restore_cache:
          key: pelican-bookstore-{{ checksum "pom.xml" }}
      - run: mvn dependency:go-offline
      - save_cache:
          paths:
            - ~/.m2
          key: pelican-bookstore-{{ checksum "pom.xml" }}
      - run: mvn package
      - persist_to_workspace:
          root: target/
          paths:
            - .
      - store_test_results:
          path: target/surefire-reports      
      - store_artifacts:
          path: target/pelican-bookstore-0.0.1-SNAPSHOT.jar

#  build_docker_image:
#    working_directory: ~/pelican-bookstore
#    docker:
#      - image: circleci/openjdk:8-jdk-stretch-browsers
#    steps:
#      - checkout
#      - attach_workspace:
#          at: target
#      - setup_remote_docker:
#          docker_layer_caching: true
#      - run: |
#          TAG=0.1.$CIRCLE_BUILD_NUM
#          docker build -t perican-bookstore:$TAG .
#      - run:

  create-deployment:
    executor: azure-aks/default
    parameters:
      cluster-name:
        description: |
          Name of the AKS cluster
        type: string
      resource-group:
        description: |
          Resource group that the cluster is in
        type: string
    steps:
      - checkout
      - azure-aks/update-kubeconfig-with-credentials:
          cluster-name: << parameters.cluster-name >>
          install-kubectl: true
          perform-login: true
          resource-group: << parameters.resource-group >>
      - kubernetes/create-or-update-resource:
          resource-file-path: tests/nginx-deployment/deployment.yaml
          resource-name: deployment/nginx-deployment
          
  test-cluster:
    executor: azure-aks/default
    parameters:
      cluster-name:
        description: |
          Name of the AKS cluster
        type: string
      resource-group:
        description: |
          Resource group that the cluster is in
        type: string
    steps:
      - azure-aks/update-kubeconfig-with-credentials:
          cluster-name: << parameters.cluster-name >>
          install-kubectl: true
          perform-login: true
          resource-group: << parameters.resource-group >>
      - run:
          command: |
            kubectl get services
          name: Test cluster


workflows:
  version: 2.1
  build_and_deploys:
    jobs:
      - build-and-test
#      - build_docker_image:
#          requires:
#            - build-and-test
#          filters:
#            branches:
#              only: init
      - azure-acr/build_and_push_image:
          checkout: false
          login-server-name: circlecidemo.azurecr.io
          registry-name: circlecidemo
          repo: circlecidemo.azurecr.io/pelican
          attach-workspace: true
          workspace-root: target
          requires:
            - build-and-test
           
#      - azure-aks/create-cluster:
#          cluster-name: my-aks-demo
#          create-resource-group: true
#          generate-ssh-keys: true
#          location: eastus
#          node-count: 1
#          resource-group: my-aks-demo-rg
#          requires:
#            - build_docker_image
#      - test-cluster:
#          cluster-name: my-aks-demo
#          requires:
#            - azure-aks/create-cluster
#          resource-group: my-aks-demo-rg
      - create-deployment:
          cluster-name: circleciAKSCluster
          requires:
            - azure-acr/build_and_push_image
          resource-group: CircleCIResources
      - azure-aks/update-container-image:
          cluster-name: circleciAKSCluster
          container-image-updates: 'nginx=nginx:1.9.1'
          post-steps:
            - kubernetes/delete-resource:
                resource-names: nginx-deployment
                resource-types: deployment
                wait: true
          record: true
          requires:
            - create-deployment
          resource-group: CircleCIResources
#          resource-name: deployment/nginx-deployment
#      - azure-aks/delete-cluster:
#          cluster-name: my-aks-demo
#          delete-resource-group: true
#          delete-service-principal: true
#          requires:
#            - test-cluster
#          resource-group: my-aks-demo-rg

